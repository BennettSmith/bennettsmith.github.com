<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Apple | iDevelopSoftware]]></title>
  <link href="http://blog.idevelopsoftware.com/blog/categories/apple/atom.xml" rel="self"/>
  <link href="http://blog.idevelopsoftware.com/"/>
  <updated>2013-02-10T20:56:30-08:00</updated>
  <id>http://blog.idevelopsoftware.com/</id>
  <author>
    <name><![CDATA[Bennett Smith]]></name>
    <email><![CDATA[bsmith@idevelopsoftware.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Capturing AirPort Extreme Log with Lion Server Syslog]]></title>
    <link href="http://blog.idevelopsoftware.com/2011/08/capturing-airport-extreme-log-with-lion-server-syslog/"/>
    <updated>2011-08-09T08:00:00-07:00</updated>
    <id>http://blog.idevelopsoftware.com/2011/08/capturing-airport-extreme-log-with-lion-server-syslog</id>
    <content type="html"><![CDATA[<p>Mac OS X Lion Server can be used as a syslog server to capture the log messages from an Apple AirPort Extreme wireless router. The instructions below walk you through setting this up.</p>

<p>Syslog is controlled by a plist file found in the launch daemons directory. The full path to the file is:</p>

<pre>/System/Library/LaunchDaemons/com.apple.syslogd.plist
</pre>


<p>You need to edit this file to add a network listener. The plist is stored in a binary format so you need to use the plutil to convert it to XML using this command:</p>

<pre>$ pushd /System/Library/LaunchDaemons
$ sudo plutil -convert xml1 /System/Library/LaunchDaemons/com.apple.syslogd.plist
$ sudo vim /System/Library/LaunchDaemons/com.apple.syslogd.plist
$ sudo plutil -convert binary1 /System/Library/LaunchDaemons/com.apple.syslogd.plist
$ sudo launchctl unload /System/Library/LaunchDaemons/com.apple.syslogd.plist
$ sudo launchctl load /System/Library/LaunchDaemons/com.apple.syslogd.plist
</pre>


<p>Here is a complete example of the modified plist file. The new key is the NetworkListener. Be sure you add it nested inside the Sockets key or it will not work.</p>

<p><div><script src='https://gist.github.com/1134216.js'></script>
<noscript><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;
&lt;plist version=&quot;1.0&quot;&gt;
&lt;dict&gt;
	&lt;key&gt;EnableTransactions&lt;/key&gt;
	&lt;true/&gt;
	&lt;key&gt;EnvironmentVariables&lt;/key&gt;
	&lt;dict&gt;
		&lt;key&gt;ASL_DISABLE&lt;/key&gt;
		&lt;string&gt;1&lt;/string&gt;
	&lt;/dict&gt;
	&lt;key&gt;HopefullyExitsLast&lt;/key&gt;
	&lt;true/&gt;
	&lt;key&gt;JetsamProperties&lt;/key&gt;
	&lt;dict&gt;
		&lt;key&gt;JetsamMemoryLimit&lt;/key&gt;
		&lt;integer&gt;300&lt;/integer&gt;
		&lt;key&gt;JetsamPriority&lt;/key&gt;
		&lt;integer&gt;-49&lt;/integer&gt;
	&lt;/dict&gt;
	&lt;key&gt;Label&lt;/key&gt;
	&lt;string&gt;com.apple.syslogd&lt;/string&gt;
	&lt;key&gt;MachServices&lt;/key&gt;
	&lt;dict&gt;
		&lt;key&gt;com.apple.system.logger&lt;/key&gt;
		&lt;true/&gt;
	&lt;/dict&gt;
	&lt;key&gt;OnDemand&lt;/key&gt;
	&lt;false/&gt;
	&lt;key&gt;ProgramArguments&lt;/key&gt;
	&lt;array&gt;
		&lt;string&gt;/usr/sbin/syslogd&lt;/string&gt;
	&lt;/array&gt;
	&lt;key&gt;Sockets&lt;/key&gt;
	&lt;dict&gt;
		&lt;key&gt;NetworkListener&lt;/key&gt;
		&lt;dict&gt;
			&lt;key&gt;SockServiceName&lt;/key&gt;
			&lt;string&gt;syslog&lt;/string&gt;
			&lt;key&gt;SockType&lt;/key&gt;
			&lt;string&gt;dgram&lt;/string&gt;
		&lt;/dict&gt;
		&lt;key&gt;AppleSystemLogger&lt;/key&gt;
		&lt;dict&gt;
			&lt;key&gt;SockPathMode&lt;/key&gt;
			&lt;integer&gt;438&lt;/integer&gt;
			&lt;key&gt;SockPathName&lt;/key&gt;
			&lt;string&gt;/var/run/asl_input&lt;/string&gt;
		&lt;/dict&gt;
		&lt;key&gt;BSDSystemLogger&lt;/key&gt;
		&lt;dict&gt;
			&lt;key&gt;SockPathMode&lt;/key&gt;
			&lt;integer&gt;438&lt;/integer&gt;
			&lt;key&gt;SockPathName&lt;/key&gt;
			&lt;string&gt;/var/run/syslog&lt;/string&gt;
			&lt;key&gt;SockType&lt;/key&gt;
			&lt;string&gt;dgram&lt;/string&gt;
		&lt;/dict&gt;
	&lt;/dict&gt;
&lt;/dict&gt;
&lt;/plist&gt;
</code></pre></noscript></div>
</p>

<p>Once you have updated the plist the next step is to update the configuration of your AirPort Extreme. Under Applications => Utilities open the AirPort Utility and connect to your AirPort Extreme. On the Advanced tab select the “Logging &amp; Statistics” panel. Enter the IP address of your Mac OS X Lion Server in “Syslog Destination Address:” and select “6 – Informational” for the “Syslog Level:”. You can see a screenshot of the AirPort Utility settings below. Update the settings on the AirPort Extreme.</p>

<div>
  <img style="display:block; margin-left:auto; margin-right:auto;" src="http://www.idevelopsoftware.com/wp-content/uploads/2011/08/2011-08-09083214-AirPort-Utility-Focal-Shift-AirPort-Extreme.png" alt="AirPort Extreme Advanced Configuration" title="[2011-08-09083214]  AirPort Utility-Focal Shift AirPort Extreme.png" border="0" width="320" height="318" />
</div>


<p>Now, you probably want to verify that the logging is actually happening. Open Console.app on your server and look at “All Messages”. While looking at the logs go to another machine (I used my MacBook Air with a wireless connection to the AirPort Extreme) and open System Preferences and then Network. Select your network adapter and ask for it to renew the DHCP lease. You should see some activity in the log.</p>

<p>Another way to verify the logging is to turn wifi off on your laptop. You should see a message like this:</p>

<pre>8/9/11 8:43:09.000 AM 80211: Disassociated with station 60:33:4b:2c:de:c0
</pre>


<p>When you turn wifi back on you will see something similar to this:</p>

<pre>8/9/11 8:43:10.000 AM 80211: Rotated TKIP group key.
8/9/11 8:43:21.000 AM 80211: Associated with station 60:33:4b:2c:de:c0
8/9/11 8:43:21.000 AM 80211: Authenticating station 60:33:4b:2c:de:c0 to RADIUS.
8/9/11 8:43:21.000 AM 80211: Installed unicast CCMP key for supplicant 60:33:4b:2c:de:c0
8/9/11 8:43:21.000 AM natpmp: Binding added for udp, 173.164.164.17:32770 to 10.0.1.104:4500 with lifetime 7200
8/9/11 8:43:21.000 AM natpmp: Binding added for udp, 173.164.164.17:32771 to 10.0.1.104:5353 with lifetime 7200
</pre>


<p>That’s it. You now have syslog data being captured on your Mac OS X Lion server from your AirPort Extreme base station!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Heading to Big Nerd Ranch later this month!]]></title>
    <link href="http://blog.idevelopsoftware.com/2010/10/heading-to-big-nerd-ranch-later-this-month/"/>
    <updated>2010-10-03T08:00:00-07:00</updated>
    <id>http://blog.idevelopsoftware.com/2010/10/heading-to-big-nerd-ranch-later-this-month</id>
    <content type="html"><![CDATA[<p>One of the podcasts I listen to on a regular basis is called MacBreak. The hosts are Leo Leporte, Alex Lindsay, Andy Ihnatko and a rotating list of other Mac/Apple/iOS luminaries. If you aren’t familiar with it head over to <a href="http://twit.tv/mbw">http://twit.tv/mbw</a> and have a listen. It is highly recommended for anyone interested in <em>all things Macintosh (and iOS too)</em>.</p>

<p>A few episodes ago Alex Lindsay mentioned that his company was going to be hosting a one week <em>Commuter iOS Class</em> at their San Francisco offices so their team could come up to speed developing applications for iOS devices. The class would be taught by the folks from <a href="http://www.bignerdranch.com/">Big Nerd Ranch</a>. Usually the BNR folks teach classes from their <em>monastery</em> at a secret location just outside Atlanta, Georgia. Having them venture out to San Francisco; wow, what an opportunity. Oh, did I mention that Alex Lindsay also announced that there were a limited number of spots open to <em>the unwashed masses</em> to attend and the class would be held from 2:00 p.m. until 10:00 p.m. each day so folks could continue to do at least part of their day jobs.</p>

<p>All in all this just sounded too good to pass up so I fired off an e-mail to the folks at BNR to let them know I wanted to attend. My fingers were crossed because I know how quickly their classes fill up. Needless to say I wouldn’t be writing this post if I didn’t get in. <img src='http://www.idevelopsoftware.com/wp-includes/images/smilies/icon_smile.gif' alt=':-)' class='wp-smiley' /></p>

<p>So, I’m off to the <a href="http://www.pixelcorps.com/">Pixel Corps</a> offices later this month to soak up some more iOS goodness. Hope to see a few of you there too.</p>

<p>BTW: Here is a link to the <a href="http://www.bignerdranch.com/classes/commuter_ios_class_with_macbreak_2pm-10pm">course description</a> for anyone curious.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacBook Pro Development Environment]]></title>
    <link href="http://blog.idevelopsoftware.com/2010/10/macbook-pro-development-environment/"/>
    <updated>2010-10-01T08:00:00-07:00</updated>
    <id>http://blog.idevelopsoftware.com/2010/10/macbook-pro-development-environment</id>
    <content type="html"><![CDATA[<p>This article covers the steps I went through to setup my MacBook Pro for Google App Engine (GAE) development. I am using the Python runtime in GAE so the focus here is on a Python development environment.</p>

<h1>Python</h1>

<h2>Setting Python 2.5 as Default</h2>

<p>My MacBook Pro is running Snow Leopard. I am planning to host my projects on Google App Engine and it requires Python 2.5. Snow Leopard ships with Python 2.6 as the default. You can switch to Python 2.5 using a few simple commands, as follows:</p>

<pre>$ defaults write com.apple.versioner.python Version 2.5
$ sudo defaults write /Library/Preferences/com.apple.versioner.python Version 2.5
</pre>


<p>After issuing these commands you should logout and login, launch a Terminal window and issue the command</p>

<pre>$ python --version
</pre>


<p>It should report <tt>Python 2.5.4</tt> as the result. If it still says <tt>Python 2.6.1</tt> then your change did not take effect. To troubleshoot the problem start with <tt>man python</tt>. It includes information on how to switch the default version of Python on your system.</p>

<h2>Additional Python Modules</h2>

<p>Google App Engine expects that the ssl module is installed. This is so it can verify the identity of the GAE servers when trying to deploy your projects. Install it like this:</p>

<pre>$ curl http://pypi.python.org/packages/source/s/ssl/ssl-1.15.tar.gz --output ssl-1.15.tar.gz
$ tar xvf ssl-1.15.tar.gz
$ cd ssl-1.15
$ sudo python setup.py install
</pre>


<p>If you want to use the GAE image manipulation classes while running on the local development server you will need to install PIL using the following command.</p>

<pre>$ sudo easy_install pil
</pre>


<p>The following will be necessary for building some other python libraries later in the process.</p>

<pre>$ sudo easy_install docutils
</pre>


<p>The following modules are necessary if you choose to install IPython (see next section). If you are planning on skipping the IPython installation these can be skipped as well.</p>

<pre>$ sudo easy_install readline
$ sudo easy_install nose
$ sudo easy_install pexpect
</pre>


<h2>IPython</h2>

<p>The IPython interactive interpreter is a good addition to your Python development environment. It does not come pre-installed on Snow Leopard. You can download the latest stable version using this command:</p>

<pre>$ curl http://ipython.scipy.org/dist/0.10/ipython-0.10.tar.gz --output ipython-0.10.tar.gz
$ tar -xzf ipython-0.10.tar.gz
$ cd ipython
$ sudo python setup.py install
</pre>


<h1>Google App Engine SDK</h1>

<p>The Google App Engine SDK for Python is available at http://code.google.com/appengine/downloads.html. As of this writing you can use the following command to grab the latest version:</p>

<pre>$ curl http://googleappengine.googlecode.com/files/GoogleAppEngineLauncher-1.3.7.dmg --output GoogleAppEngineLauncher-1.3.7.dmg
</pre>


<p>Once you download the <tt>dmg</tt> file open it in Finder and run the installer. It will place all of the necessary files on your machine. Once complete locate the <em>GoogleAppEngineLauncher.app</em> icon in Finder and double-click on it. This application provides a nice UI for managing your GAE projects.</p>

<h1>Source Code Management Tools</h1>

<h2>Git</h2>

<p>I am planning on managing the source code for my projects with <tt>git</tt> and will store my master repositories on <a href="http://github.com">http://github.com</a>. Apple does not include a copy of <tt>git</tt> on the machine by default. An installer is available at <a href="http://help.github.com/mac-git-installation/">http://help.github.com/mac-git-installation/</a>. While you are at it also create an account on github if you don’t already have one. It is useful for <em>social coding</em> in the wider open-source community.</p>

<h2>Mercurial</h2>

<p>Some of the Django open source software I plan on using is maintained using a distributed source control management tool called Mercurial. An installer for this is available at <a href="http://mercurial.selenic.com">http://mercurial.selenic.com</a>. Download and install the software.</p>

<pre>$ curl http://mercurial.selenic.com/release/mercurial-1.6.3.tar.gz --output mercurial-1.6.3.tar.gz
$ tar xvf mercurial-1.6.3.tar.gz
$ cd mercurial-1.6.3
$ make PREFIX=/System/Library/Frameworks/Python.framework/Versions/2.5 all
$ sudo make PREFIX=/System/Library/Frameworks/Python.framework/Versions/2.5 install
$ hg version
</pre>


<h1>Django-nonrel</h1>

<p>I plan on implementing my web applications on top of the Django framework. Some modifications are required in order for this framework to run properly on GAE since Google uses <em>Big Table</em> for data storage instead of a relational database. Everything necessary to get Django working in GAE is included as part of the <a href="http://www.allbuttonspressed.com/projects/django-nonrel">Django-nonrel</a> project. Specific instructions for GAE are available at <a href="http://www.allbuttonspressed.com/projects/djangoappengine">http://www.allbuttonspressed.com/projects/djangoappengine</a>.</p>

<p>Use the commands listed below to install copies of all the necessary components onto your machine. Everything will be stored in a folder called <tt>DjangoStuff</tt> under your home directory.</p>

<pre>$ mkdir $HOME/DjangoStuff
$ cd $HOME/DjangoStuff
$ hg clone https://bitbucket.org/wkornewald/django-nonrel
$ hg clone https://bitbucket.org/wkornewald/djangoappengine
$ hg clone https://bitbucket.org/wkornewald/djangotoolbox
$ hg clone https://bitbucket.org/wkornewald/django-dbindexer
$ hg clone https://bitbucket.org/wkornewald/django-testapp
</pre>


<p>Now, pick another folder where you want to setup a practice application. I am calling mine <tt>cs-practice</tt> since this is also the name of my Google App Engine application.</p>

<p>Use the following commands to configure the practice application for Django-nonrel development.</p>

<pre>$ mkdir $HOME/cs-practice
$ cd $HOME/cs-practice
$ ln -s $HOME/DjangoStuff/django-nonrel/django django
$ ln -s $HOME/DjangoStuff/djangoappengine djangoappengine
$ ln -s $HOME/DjangoStuff/djangotoolbox/djangotoolbox djangotoolbox
$ ln -s $HOME/DjangoStuff/django-dbindexer/dbindexer dbindexer
$ cp -r $HOME/DjangoStuff/django-testapp/* .
</pre>


<p>Once you have the practice folder setup you need to edit the <tt>app.yaml</tt> file and change the application name to reflect the Google App Engine application name you selected when registering on <a href="http://appengine.google.com">http://appengine.google.com</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iMac bluetooth problems gone, but how?]]></title>
    <link href="http://blog.idevelopsoftware.com/2010/08/imac-bluetooth-problems-gone-but-how/"/>
    <updated>2010-08-01T08:00:00-07:00</updated>
    <id>http://blog.idevelopsoftware.com/2010/08/imac-bluetooth-problems-gone-but-how</id>
    <content type="html"><![CDATA[<p>My 27″ iMac has been having some very strange bluetooth problems lately. As mentioned in a recent blog post, all bluetooth devices were <em>unavailable</em> according to the operating system. Reboots didn’t fix the problem. Checking through the console logs turned up messages about the bluetooth drivers not working properly. Fortunately I had a USB keyboard so I was able to make a full backup of the system before scheduling an appointment with the genius at the Apple Store.</p>

<p>Now it has been a couple weeks and I have the machine back and Apple didn’t find anything wrong. In fact, they say the bluetooth works fine. I turned everything on and it works fine here too. I had a hunch that this might be the case. Last week my 13″ MBP had the exact same issue. No bluetooth devices would work with it. In this case a full reboot did correct the problem.</p>

<p>So, what bluetooth devices do I have, and which one is misbehaving and causing all of these problems? I don’t know for sure, but I suspect either the new iPhone 4 or the Plantronics Bluetooth Headset I have. The Apple Bluetooth Keyboard and Magic Mouse seem to be working fine. I have noticed other issues with the bluetooth on the iPhone 4 when it syncs with the Alpine IWA-505 head unit in my truck so my money is on the iPhone 4 being the cause in all of these bluetooth problems. Time will tell.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wireless Keyboards and Mice are Great Until&#8230;.]]></title>
    <link href="http://blog.idevelopsoftware.com/2010/07/wireless-keyboards-and-mice-are-great-until/"/>
    <updated>2010-07-13T08:00:00-07:00</updated>
    <id>http://blog.idevelopsoftware.com/2010/07/wireless-keyboards-and-mice-are-great-until</id>
    <content type="html"><![CDATA[<p>Tonight I sat down at my 27″ iMac to get a little work done. The first thing I do is tap the keyboard and move the mouse to wake the machine from sleep mode. The machine awoke and then quickly displayed the <em>Connection Lost</em> graphics in the middle of the screen for both the mouse and keyboard. My first thought; no problem, it’s just the batteries so I replaced them. Still no connection (and it did seem kind of odd for both the mouse and keyboard batteries to be dead at the same time.) Looking up at the system tray I see an odd Bluetooth icon. Here’s a closeup of what I found:</p>

<div style="text-align:center;">
  <img src="http://www.idevelopsoftware.com/wp-content/uploads/2010/07/LittleSnapper.png" alt="LittleSnapper.png" border="0" width="280" height="69" align="center" />
</div>


<p>The <em>Bluetooth: Not Available</em> message in the system tray is not a good sign. Next I opened up <em>Console.app</em> to see if there were any indications of what the root cause for this behavior was. It appears there is truly something wrong with the Bluetooth Module. Here is what it showed:</p>

<div style="text-align:center;">
  <img src="http://www.idevelopsoftware.com/wp-content/uploads/2010/07/Console2.png" alt="[AppleUSBBluetoothHCIController][FindInterfaces] some interface pipes were not found. Device is no good a a transport" border="0" width="730" height="124" align="center" />
</div>


<p>A visit to the support forums at Apple led me to an idea to reset the SMC on the iMac. I tried that and still nothing. At this point I’m not a happy camper. It is looking like the Bluetooth Module in my iMac has given up the ghost.</p>

<p>Next step, the iPhone Apple AppStore application to make a Genius Bar appointment.</p>

<div style="text-align:center;">
  <img src="http://www.idevelopsoftware.com/wp-content/uploads/2010/07/genius.png" alt="genius.png" border="0" width="213" height="320" align="center" />
</div>


<p>If you have read this far then you might be wondering why I’m telling you all of this. The reason is simple. Without a USB keyboard and mouse laying around somewhere none of the troubleshooting above would have been possible. Having a wireless bluetooth keyboard and mouse ship by default with the iMac is a really odd choice on Apple’s part.</p>

<p>Thankfully I have a keyboard and mouse from the Xserve in my garage. In case you forgot what these old fashion beasts look like, here’s a picture of the dynamic duo that saved my bacon tonight!</p>

<div style="txt-align:center;">
  <img src="http://www.idevelopsoftware.com/wp-content/uploads/2010/07/backup_plan.png" alt="backup_plan.png" border="0" width="640" height="478" align="center" />
</div>



]]></content>
  </entry>
  
</feed>
